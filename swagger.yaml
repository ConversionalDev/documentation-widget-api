{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Conversional Widget API",
    "description" : "Endpoints for using the Conversional frontend widget. Please use the default API keys to authorize and test the endpoints",
    "contact" : {
      "email" : "support@conversional.de"
    },
    "version" : "3.0.3"
  },
  "servers" : [ {
    "url" : "https://testing.roomtailors.de/api/2.0/",
    "description" : "Testing API",
    "variables" : {
      "apiKey" : {
        "default" : "V8Ryk0XMZQ3XlyoCePAjZo9cVDTN9s55AXDVXBHWrKTNjhpx7ZQ6n0jjEc7O"
      }
    }
  }, {
    "url" : "https://staging.roomtailors.de/api/2.0/",
    "description" : "Staging API",
    "variables" : {
      "apiKey" : {
        "default" : "RhzXDgMoyw6eihjd8wu4zSVJF2kbBvGtNfrrweQ5KWj2eCfn8JrICnsiqMt1"
      }
    }
  }, {
    "url" : "https://api.conversional.de/2.0/",
    "description" : "Production API"
  } ],
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "Journey",
    "description" : "Endpoints for initializing and controlling the journey."
  }, {
    "name" : "Questionnaire",
    "description" : "Questionnaire related endpoints."
  }, {
    "name" : "Result",
    "description" : "Endpoints to display and interact with results or content."
  } ],
  "paths" : {
    "/journeys/{token}" : {
      "get" : {
        "tags" : [ "Journey" ],
        "summary" : "Sends journey configuration. This is the initial call to the API to decide if the widget is active or not.",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]{6-8}}$",
            "type" : "string",
            "example" : "gx0YM01R"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Contains overall widget confiugraton object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        }
      }
    },
    "/questionnaires/{id}" : {
      "get" : {
        "tags" : [ "Questionnaire" ],
        "summary" : "Provide a configuration for this questionnaire.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "default" : 7
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Questionnaire configuration values.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          }
        }
      }
    },
    "/questionnaires" : {
      "post" : {
        "tags" : [ "Questionnaire" ],
        "summary" : "Submit answers to a questionnaire to create a result and receive the token. Submitting multiple identical requests to this endpoint from the same IP will not create a new result to avoid spamming the database.",
        "parameters" : [ {
          "name" : "testmode",
          "in" : "query",
          "description" : "If set to true, created record will be deleted at latest 24 hours after creation.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Answers"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created new result.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request. Usually in case of invalid data."
          },
          "500" : {
            "description" : "Internal error."
          },
          "404" : {
            "description" : "Questionnaire id not found."
          }
        }
      }
    },
    "/results/{token}" : {
      "get" : {
        "tags" : [ "Result" ],
        "summary" : "Get the result view. This is a usually long and complex object. The request should be used sparingly.",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]{6-8}}$",
            "type" : "string",
            "example" : "gx0YM01R"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Result found and returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          }
        }
      }
    },
    "/serviceRequests/{serviceName}" : {
      "post" : {
        "tags" : [ "Result" ],
        "summary" : "Create a new service request by sending a payload to the right endpoint.",
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "callback", "callbackFromLocation" ]
          }
        } ],
        "requestBody" : {
          "description" : "Optional description in *Markdown*",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/serviceRequests_serviceName_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Service request was successfully created. This usually involes sending the request to a responsible person to act on it."
          }
        }
      }
    },
    "/timekits/{token}" : {
      "post" : {
        "tags" : [ "Result" ],
        "summary" : "Create a new timekit booking that triggers the service request process. Will merge provided data with project-based information.",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]{6-8}}$",
            "type" : "string",
            "example" : "gx0YM01R"
          }
        } ],
        "requestBody" : {
          "description" : "Contains customer and project and booking data.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/timekits_token_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Service request was successfully created. This usually involes sending the request to a responsible person to act on it."
          }
        }
      }
    },
    "/result/{token}/profile/" : {
      "put" : {
        "tags" : [ "Result" ],
        "summary" : "Will update the entire profile. Values that are already available will be overwritten. To delete existing values you can pass an empty value for a key",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]{6-8}}$",
            "type" : "string",
            "example" : "gx0YM01R"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/token_profile_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Profile was successfully updated"
          }
        }
      },
      "patch" : {
        "tags" : [ "Result" ],
        "summary" : "Will add the provided keys/values to the profile. Will keep existing features and values intact. In case of overlap will not do anything.",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]{6-8}}$",
            "type" : "string",
            "example" : "gx0YM01R"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/token_profile_body_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Profile was successfully updated"
          }
        }
      }
    },
    "/locations" : {
      "get" : {
        "tags" : [ "Journey" ],
        "summary" : "Returns a list of locations for this journey.",
        "parameters" : [ {
          "name" : "journeyId",
          "in" : "query",
          "description" : "JourneyId of the result",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "close_to",
          "in" : "query",
          "description" : "City name string to return 5 closest locations.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "postal_code",
          "in" : "query",
          "description" : "Postal code  return the 5 closest locations.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Could not find journey related to provided token. Usually if result is no longer available.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "400" : {
            "description" : "Address could not be transformed into a valid geo code.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "500" : {
            "description" : "No projects found. Internal configuration error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_500"
                }
              }
            }
          },
          "200" : {
            "description" : "An array of locations and project_ids to populate Timekit. Response can be empty, if no locations were close.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Locations"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{projectId}" : {
      "get" : {
        "tags" : [ "Journey" ],
        "summary" : "Returns available timeslots for a project_id = location",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "id of the location/project",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Could not find project with this Id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404_1"
                }
              }
            }
          },
          "200" : {
            "description" : "An array of timeslots with start and end times and the associated resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationsAvailability"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Error" : {
        "required" : [ "code", "message", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Name of the exception object",
            "example" : "UnauthorizedException"
          },
          "code" : {
            "type" : "number",
            "description" : "HTTP status code",
            "example" : 401
          },
          "message" : {
            "type" : "string",
            "example" : "API Key authorization process with key failed. Invalid key."
          },
          "error_user_message" : {
            "type" : "string",
            "description" : "User-readable and localized error message.",
            "example" : "Sorry, your credentials are not valid."
          },
          "error_user_title" : {
            "type" : "string",
            "description" : "User-readable and localized error title.",
            "example" : "Login Failed"
          },
          "error_code_internal" : {
            "type" : "string",
            "description" : "Internal error code to specify the type of error. Internal codes are documented to be a reliable way to handle the error in the frontend.",
            "example" : "4001"
          }
        }
      },
      "Locations" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Contains all locations. The key is the Timekit project id, the value is the location name to be displayed.",
            "example" : {
              "929403ff-3e0c-4691-b112-08de2cb2e66" : "Stetten - Teststraße 1, 70001  Stetten",
              "7ff2311-3e0c-4691-b112-08de2cb2e66e" : "Beuren - Gummersweg 99, 70199 Beuren"
            }
          }
        }
      },
      "LocationsAvailability" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "Availabile timeslots for up to 2 weeks.",
            "items" : {
              "$ref" : "#/components/schemas/LocationTimeslot"
            }
          }
        }
      },
      "LocationTimeslot" : {
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "string",
            "format" : "ISO Time",
            "example" : "2018-12-07T04:00:00+01:00"
          },
          "end" : {
            "type" : "string",
            "format" : "ISO Time",
            "example" : "2018-12-07T04:00:00+01:00"
          },
          "resource" : {
            "$ref" : "#/components/schemas/LocationTimeslot_resource"
          }
        }
      },
      "Answers" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Answers_data"
          }
        },
        "example" : {
          "data" : {
            "Id" : "4",
            "Answers" : {
              "1" : [ "46", "43", "42" ],
              "5" : "pets",
              "9" : "low_ceiling",
              "17" : "female"
            },
            "Customer" : {
              "firstname" : "test",
              "email" : "nnn32nn@conversional.de"
            },
            "meta" : {
              "something" : true
            }
          }
        }
      },
      "CustomerAddition" : {
        "type" : "object",
        "properties" : {
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "zip" : {
            "type" : "string"
          }
        }
      },
      "Appointment" : {
        "required" : [ "end", "project_id", "resource_id", "start" ],
        "type" : "object",
        "properties" : {
          "project_id" : {
            "type" : "string"
          },
          "start" : {
            "type" : "string",
            "format" : "ISO Time",
            "example" : "2018-12-07T04:00:00+01:00"
          },
          "end" : {
            "type" : "string",
            "format" : "ISO Time",
            "example" : "2018-12-07T04:00:00+01:00"
          },
          "resource_id" : {
            "type" : "string"
          },
          "graph" : {
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          },
          "what" : {
            "type" : "string"
          },
          "where" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "CustomerSignup" : {
        "type" : "object",
        "properties" : {
          "firstname" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "gender" : {
            "type" : "string",
            "enum" : [ "m", "f" ]
          },
          "password" : {
            "type" : "string",
            "format" : "password"
          },
          "lastname" : {
            "type" : "string"
          },
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "Builder" : {
        "type" : "object",
        "properties" : {
          "Content" : {
            "$ref" : "#/components/schemas/BuilderContent"
          },
          "Children" : {
            "$ref" : "#/components/schemas/BuilderChildren"
          }
        }
      },
      "Configuration" : {
        "required" : [ "base_url", "theme" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Hash-id of the journey."
          },
          "base_url" : {
            "type" : "string",
            "description" : "URL of the main installation location. Default redirect route to re-display the widget to users."
          },
          "theme" : {
            "$ref" : "#/components/schemas/Configuration_theme"
          },
          "callToAction" : {
            "$ref" : "#/components/schemas/Configuration_callToAction"
          },
          "entry" : {
            "$ref" : "#/components/schemas/Configuration_entry"
          },
          "tracking" : {
            "$ref" : "#/components/schemas/Configuration_tracking"
          },
          "mouseTracking" : {
            "type" : "boolean",
            "description" : "Enable mouse tracking tool to replay user sessions."
          },
          "blackList" : {
            "$ref" : "#/components/schemas/urlFilter"
          },
          "whiteList" : {
            "$ref" : "#/components/schemas/urlFilter"
          }
        }
      },
      "Questionnaire" : {
        "type" : "object",
        "properties" : {
          "Questionnaire" : {
            "$ref" : "#/components/schemas/Questionnaire_Questionnaire"
          }
        }
      },
      "Question" : {
        "type" : "object",
        "properties" : {
          "Option" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Option"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Is always a number, should be integer."
          },
          "title" : {
            "type" : "string",
            "description" : "Usually single word headline"
          },
          "type" : {
            "type" : "string",
            "description" : "Name of the component, that should be used to render this questions."
          },
          "question" : {
            "type" : "string",
            "description" : "question text"
          },
          "multiple" : {
            "type" : "boolean",
            "description" : "True if multiple answers are allowed"
          },
          "description" : {
            "type" : "string",
            "description" : "Advice how to answer the question"
          },
          "required" : {
            "type" : "boolean",
            "description" : "True, if question must be answered"
          },
          "min" : {
            "type" : "string",
            "description" : "Is always an integer value. Minimal answers required."
          },
          "max" : {
            "type" : "string",
            "description" : "Is always an integer value. Maximum answers allowed"
          },
          "show" : {
            "type" : "string",
            "description" : "Empty or show condition of this question. Sytax is 'A' + questionId + ';==' + value",
            "example" : "A18;=='wohnzimmer' || A18;==undefined"
          }
        },
        "example" : [ {
          "id" : "39",
          "title" : "Kitchen form",
          "type" : "ImageMultiCheck",
          "question" : "Pick the form of your kitchen",
          "multiple" : false,
          "description" : "Select a single option",
          "required" : true,
          "min" : "1",
          "max" : "1",
          "show" : ""
        } ]
      },
      "Option" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "String, usually integer value"
          },
          "label" : {
            "type" : "string",
            "description" : "Text to be displayed to the end user"
          },
          "value" : {
            "type" : "string",
            "description" : "Will be stored when selected"
          },
          "reference" : {
            "type" : "string",
            "description" : "Internal linked asset id, can be ignored."
          },
          "question_id" : {
            "type" : "string",
            "description" : "ID of the question it belongs to"
          },
          "image" : {
            "pattern" : "https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)",
            "type" : "string",
            "description" : "URL of the related image file."
          },
          "properties" : {
            "type" : "object",
            "description" : "Properties to specify, depends on the type of question."
          }
        },
        "example" : [ {
          "id" : "283",
          "label" : "Einzeilig",
          "value" : "Küchenzeile",
          "reference" : "1349",
          "question_id" : "39",
          "image" : "https://api.conversional.de/files/filestore/file/1349/GenF2einzeilig.jpg"
        } ]
      },
      "Closure" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "hashId" : {
            "type" : "string"
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClosureField"
            }
          }
        }
      },
      "ClosureField" : {
        "required" : [ "label", "name", "questionnaire_id", "required", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Field name, used as key for this value",
            "example" : "Firstname"
          },
          "label" : {
            "type" : "string",
            "description" : "Field description, usually shown in the placeholder",
            "example" : "Ihr Vorname"
          },
          "required" : {
            "type" : "boolean",
            "description" : "If set to true, will lead to server-sided validation errors."
          },
          "type" : {
            "type" : "string",
            "description" : "Input type of the field.",
            "example" : "text"
          },
          "icon" : {
            "pattern" : "https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)",
            "type" : "string",
            "description" : "URL of the image"
          },
          "image" : {
            "pattern" : "https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)",
            "type" : "string",
            "description" : "URL of the image"
          },
          "questionnaire_id" : {
            "type" : "string"
          }
        }
      },
      "QuestionnaireConfiguration" : {
        "type" : "object",
        "properties" : {
          "logo" : {
            "pattern" : "https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)",
            "type" : "string",
            "description" : "Image URL"
          },
          "title" : {
            "type" : "string",
            "description" : "Headline of the questionnaire"
          },
          "subtitle" : {
            "type" : "string"
          }
        }
      },
      "BuilderChildren" : {
        "type" : "object",
        "properties" : {
          "additionlProperties" : {
            "$ref" : "#/components/schemas/BuilderContent"
          }
        }
      },
      "BuilderContent" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "componentKey" : {
            "type" : "string",
            "description" : "Identifier of the component. Potentially necessary for identifying and triggering components from outside."
          },
          "format" : {
            "type" : "string",
            "description" : "Defines which paradigm is used for rendering. Other component formats are deprecated.",
            "enum" : [ "html", "component", "markdown" ]
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the element with its format paradigm. In case of HTML this is the tag, e.g. h3, h2, p. In case of component this is the name of the component, e.g. IconGrid, Flexbox etc."
          },
          "props" : {
            "$ref" : "#/components/schemas/BuilderContentProps"
          }
        }
      },
      "BuilderContentProps" : {
        "type" : "object",
        "properties" : {
          "styles" : {
            "$ref" : "#/components/schemas/BuilderContentStyles"
          },
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : "Allowed props depend on the component and can have various types and formats."
      },
      "BuilderContentStyles" : {
        "type" : "object",
        "properties" : {
          "general" : {
            "$ref" : "#/components/schemas/style"
          },
          "desktop" : {
            "$ref" : "#/components/schemas/style"
          },
          "mobile" : {
            "$ref" : "#/components/schemas/style"
          }
        },
        "description" : "CSS in React style. General styles are always applied but can be overwritten by desktop or mobile styles.",
        "example" : [ {
          "general" : {
            "right" : 65,
            "bottom" : 8
          },
          "mobile" : {
            "backgroundColor" : "green"
          }
        } ]
      },
      "ExitIntentString" : {
        "type" : "string",
        "description" : "Exit intent image URL"
      },
      "ExitIntentObject" : {
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string",
            "description" : "URL"
          },
          "backdrop" : {
            "type" : "string",
            "description" : "Valid CSS color value",
            "example" : "[\"#EFEFEF\",\"rgba(240,240,0,0.5)\"]"
          }
        }
      },
      "ExitIntentMobile" : {
        "required" : [ "buttonText", "leadText" ],
        "type" : "object",
        "properties" : {
          "buttonText" : {
            "type" : "string"
          },
          "leadText" : {
            "type" : "string"
          },
          "style" : {
            "$ref" : "#/components/schemas/style"
          }
        },
        "example" : [ {
          "buttonText" : "Start Advisor",
          "leadText" : "You did not find your kitchen yet?",
          "styles" : {
            "desktop" : {
              "fontSize" : 15
            }
          }
        } ]
      },
      "Loader" : {
        "type" : "object",
        "properties" : {
          "labelReady" : {
            "type" : "string",
            "description" : "Text after the questionnaire has been answered."
          },
          "labelQuestionnaire" : {
            "type" : "string",
            "description" : "Text before the questionnaire has been answered."
          },
          "position" : {
            "type" : "string",
            "description" : "Pre-defined positions to re-locate the launcher element",
            "enum" : [ "left" ]
          },
          "styles" : {
            "$ref" : "#/components/schemas/BuilderContentStyles"
          },
          "labelPreview": {
            "type": "string",
            "description": "Text displayed in the launcher element. If not set the text container is not rendered."
          },
          "imgUrl": {
            "type": "string",
            "description": "URL for custom image in launcher, overrides the icon settings"
          },
          "imageBorderColor": {
            "type": "string",
            "description": "CSS color to be used for a border around the custom image in launcher",
            "default": "If not set will user background color set in the configuration"
          },
          "imageBorderWidth": {
            "type": "string",
            "description": "CSS line width value for the border around the custom image in launcher",
            "default": "5px"
          }
        }
      },
      "TrackingEvent" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "type" : "string"
          },
          "action" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          }
        },
        "description" : "Criteria for filtering tracking events. Usually all filters must be met to track an event."
      },
      "Style" : {
        "type" : "object",
        "properties" : {
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Processed values from the questionnaire. The key is the proerty, the value is an array of values, usually either the single- or multi selected.",
        "example" : [ {
          "farbe" : [ "dark", "colorful" ]
        }, {
          "material" : [ "wood", "granit" ]
        } ]
      },
      "Customer" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "mail"
          },
          "firstname" : {
            "type" : "string"
          },
          "firstname_genitive" : {
            "type" : "string",
            "description" : "Firstname in the second form."
          },
          "gender" : {
            "type" : "string",
            "enum" : [ "m", "f", "" ]
          },
          "active" : {
            "type" : "boolean"
          },
          "alias" : {
            "$ref" : "#/components/parameters/token"
          }
        },
        "description" : "Customer profile data. As opposed to the Style, the customer profile usually remains the same across different results (e.g. by answering a questionnaire multiple times). Contains values like phone number etc."
      },
      "abTest" : {
        "pattern" : "^[a-zA-Z0-9]{8}}$",
        "type" : "string",
        "example" : "gx0YM01R"
      },
      "htmlString" : {
        "type" : "string",
        "example" : "<div><p><b>In 8 Schritten zu Ihrer Traumküche!</b></p><p>Fragen beantworten und persönliche <br>Empfehlungen erhalten.</p><br></div></div><div class=\\\"rt-intro-background\\\"></div>"
      },
      "style" : {
        "type" : "object",
        "properties" : {
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : "React-friendly style attribute"
      },
      "urlFilter" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/urlFilterString"
        }, {
          "$ref" : "#/components/schemas/urlFilterArray"
        } ]
      },
      "urlFilterString" : {
        "type" : "string",
        "description" : "Regular expression to filter URLs"
      },
      "urlFilterArray" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/urlFilterString"
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/inline_response_200_data"
          }
        }
      },
      "inline_response_200_1" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/abTest"
        }, {
          "$ref" : "#/components/schemas/Questionnaire"
        } ]
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/inline_response_200_2_data"
          }
        },
        "example" : {
          "data" : {
            "token" : "m0VynYE"
          }
        }
      },
      "inline_response_200_3" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/inline_response_200_3_data"
          }
        }
      },
      "serviceRequests_serviceName_body" : {
        "type" : "object",
        "properties" : {
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : "Can have any payload. Required payloads may differ based on the called service.",
        "example" : {
          "alias" : "a7Bnd9s",
          "Customer" : {
            "firstname" : "Max",
            "Lastname" : "Mustermann",
            "phone" : "012323332"
          },
          "type" : "callbackFromLocation",
          "project_id" : "12345-67890-123123-123123"
        }
      },
      "timekits_token_body" : {
        "type" : "object",
        "properties" : {
          "Customer" : {
            "$ref" : "#/components/schemas/CustomerAddition"
          },
          "ServiceRequest" : {
            "$ref" : "#/components/schemas/Appointment"
          }
        },
        "description" : "Consists of Customer, ServiceRequest and additional data."
      },
      "token_profile_body" : {
        "type" : "object",
        "properties" : {
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : "Key value pairs of profile attributes. Values can be strings or arrays.",
        "example" : {
          "Color" : "red",
          "Preferences" : [ "Good looking", "Low price" ]
        }
      },
      "token_profile_body_1" : {
        "type" : "object",
        "properties" : {
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : "Key value pairs to be added to the profile",
        "example" : {
          "Color" : "red",
          "Preferences" : [ "Good looking", "Low price" ]
        }
      },
      "inline_response_404" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string",
            "example" : "No result with token ABCDEF8 found."
          }
        }
      },
      "inline_response_400" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string",
            "example" : "Could not translate address 'address' into coordinates."
          }
        }
      },
      "inline_response_500" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string",
            "example" : "No projects found for journey 11."
          }
        }
      },
      "inline_response_404_1" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string",
            "example" : "No project found with id ... found."
          }
        }
      },
      "LocationTimeslot_resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "UUID"
          },
          "name" : {
            "type" : "string"
          },
          "timezone" : {
            "type" : "string"
          }
        },
        "example" : "{\"id\":\"22e8c963-2a13-4809-9601-dee0129a5aca\",\"name\":\"Marty McFly\",\"timezone\":\"Europe/Stockholm\"}"
      },
      "Answers_data" : {
        "type" : "object",
        "properties" : {
          "Id" : {
            "type" : "integer",
            "description" : "Id of the submitted questionnaire."
          },
          "Answers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Key value pairs with question_id (as string) and answer value as string or array of strings.",
            "example" : {
              "38" : ">12 qm",
              "39" : "U-Küche"
            }
          },
          "Customer" : {
            "$ref" : "#/components/schemas/CustomerSignup"
          },
          "ServiceRequest" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Can have any number of key-value pairs that serve as payload of the service request."
            },
            "description" : "If key is included, a service request will be automatically created (even if no values under this key are present)."
          }
        }
      },
      "Configuration_theme" : {
        "type" : "object",
        "properties" : {
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "Configuration_callToAction" : {
        "type" : "object",
        "properties" : {
          "loader" : {
            "$ref" : "#/components/schemas/Loader"
          },
          "exitIntent" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ExitIntentString"
            }, {
              "$ref" : "#/components/schemas/ExitIntentObject"
            } ]
          },
          "exitIntentMobile" : {
            "$ref" : "#/components/schemas/ExitIntentMobile"
          }
        }
      },
      "Configuration_entry" : {
        "type" : "object",
        "properties" : {
          "Children" : {
            "$ref" : "#/components/schemas/BuilderChildren"
          },
          "Content" : {
            "$ref" : "#/components/schemas/BuilderContent"
          }
        }
      },
      "Configuration_tracking" : {
        "type" : "object",
        "properties" : {
          "tool" : {
            "type" : "string",
            "description" : "Which pre-installed tracking solution is used on the partner's page.",
            "enum" : [ "gtag", "ga", "gtm" ]
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TrackingEvent"
            }
          }
        }
      },
      "Questionnaire_Questionnaire" : {
        "type" : "object",
        "properties" : {
          "Question" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Question"
            }
          },
          "id" : {
            "type" : "string"
          },
          "Closure" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Closure"
            }, {
              "$ref" : "#/components/schemas/Builder"
            } ]
          },
          "Configuration" : {
            "$ref" : "#/components/schemas/QuestionnaireConfiguration"
          },
          "Intro" : {
            "description" : "Is either an HTML string or a Builder Object",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/htmlString"
            }, {
              "$ref" : "#/components/schemas/Builder"
            } ]
          }
        }
      },
      "inline_response_200_data" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "$ref" : "#/components/schemas/Configuration"
          }
        }
      },
      "inline_response_200_2_data" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_3_data_content" : {
        "type" : "object",
        "properties" : {
          "root" : {
            "$ref" : "#/components/schemas/Builder"
          }
        }
      },
      "inline_response_200_3_data" : {
        "type" : "object",
        "properties" : {
          "abTest" : {
            "$ref" : "#/components/schemas/abTest"
          },
          "content" : {
            "$ref" : "#/components/schemas/inline_response_200_3_data_content"
          },
          "profile" : {
            "$ref" : "#/components/schemas/Style"
          },
          "customer" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "template" : {
            "type" : "string",
            "description" : "Selection of the core template. Not used anymore"
          },
          "config" : {
            "$ref" : "#/components/schemas/Configuration"
          }
        }
      }
    },
    "parameters" : {
      "id" : {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "number",
          "default" : 7
        }
      },
      "token" : {
        "name" : "token",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "pattern" : "^[a-zA-Z0-9]{6-8}}$",
          "type" : "string",
          "example" : "gx0YM01R"
        }
      },
      "profileFeature" : {
        "name" : "profileFeature",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "pattern" : "^[a-zA-Z0-9]{3-30}}$",
          "type" : "string",
          "example" : "Farbgebung"
        }
      },
      "profileFeatureValue" : {
        "name" : "profileFeatureValue",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "pattern" : "^[a-zA-Z0-9]{3-30}}$",
          "type" : "string",
          "example" : "red"
        }
      },
      "serviceName" : {
        "name" : "serviceName",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "callback", "callbackFromLocation" ]
        }
      }
    },
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "name" : "apiKey",
        "in" : "query"
      }
    }
  }
}